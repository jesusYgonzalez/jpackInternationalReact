{"ast":null,"code":"var _jsxFileName = \"/Users/jesusgonzalez/Desktop/jpackInternationalReact/src/components/product-data/labels-envelopes/ThermalTransfer.js\";\nimport React from \"react\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nconst thermalTransferLabels = [{\n  productNumber: \"LB-TH01F01\",\n  size: \"1 1/2 x 1″\",\n  labelsPerRoll: \"5,500\",\n  rollsPerCase: 8,\n  labelsPerCase: \"44,000\"\n}, {\n  productNumber: \"LB-TH0201\",\n  size: \"2 x 1″\",\n  labelsPerRoll: \"5,500\",\n  rollsPerCase: 8,\n  labelsPerCase: \"44,000\"\n}, {\n  productNumber: \"LB-TH0201-2\",\n  size: \"2 x 1″ – Two Rolls\",\n  labelsPerRoll: \"11,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"44,000\"\n}, {\n  productNumber: \"LB-TH0201F\",\n  size: \"2 x 1 1/2″\",\n  labelsPerRoll: \"3,800\",\n  rollsPerCase: 8,\n  labelsPerCase: \"30,400\"\n}, {\n  productNumber: \"LB-TH0201F-2\",\n  size: \"2 x 1 1/2″ – Two Rolls\",\n  labelsPerRoll: \"7,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"28,000\"\n}, {\n  productNumber: \"LB-TH0202\",\n  size: \"2 x 2″\",\n  labelsPerRoll: \"3,000\",\n  rollsPerCase: 8,\n  labelsPerCase: \"24,000\"\n}, {\n  productNumber: \"LB-TH0301\",\n  size: \"3 x 1″\",\n  labelsPerRoll: \"5,500\",\n  rollsPerCase: 6,\n  labelsPerCase: \"33,000\"\n}, {\n  productNumber: \"LB-TH0302\",\n  size: \"3 x 2″\",\n  labelsPerRoll: \"3,000\",\n  rollsPerCase: 6,\n  labelsPerCase: \"18,000\"\n}, {\n  productNumber: \"LB-TH0303\",\n  size: \"3 x 3″\",\n  labelsPerRoll: \"1,900\",\n  rollsPerCase: 6,\n  labelsPerCase: \"11,400\"\n}, {\n  productNumber: \"LB-TH0304\",\n  size: \"3 x 4″\",\n  labelsPerRoll: \"1,250\",\n  rollsPerCase: 8,\n  labelsPerCase: \"12,000\"\n}, {\n  productNumber: \"LB-TH0305\",\n  size: \"3 x 5″\",\n  labelsPerRoll: \"1,250\",\n  rollsPerCase: 6,\n  labelsPerCase: \"7,500\"\n}, {\n  productNumber: \"LB-TH03F01\",\n  size: \"3 1/2 x 1″\",\n  labelsPerRoll: \"5,500\",\n  rollsPerCase: 6,\n  labelsPerCase: \"33,000\"\n}, {\n  productNumber: \"LB-TH03F08\",\n  size: \"3 1/2 x 8″\",\n  labelsPerRoll: \"750\",\n  rollsPerCase: 6,\n  labelsPerCase: \"4,500\"\n}, {\n  productNumber: \"LB-TH0401\",\n  size: \"4 x 1″\",\n  labelsPerRoll: \"5,500\",\n  rollsPerCase: 4,\n  labelsPerCase: \"22,000\"\n}, {\n  productNumber: \"LB-TH0401F\",\n  size: \"4 x 1 1/2″\",\n  labelsPerRoll: \"3,600\",\n  rollsPerCase: 4,\n  labelsPerCase: \"14,400\"\n}, {\n  productNumber: \"LB-TH0402\",\n  size: \"4 x 2″\",\n  labelsPerRoll: \"3,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"12,000\"\n}, {\n  productNumber: \"LB-TH0402F\",\n  size: \"4 x 2 1/2″\",\n  labelsPerRoll: \"2,500\",\n  rollsPerCase: 4,\n  labelsPerCase: \"10,000\"\n}, {\n  productNumber: \"LB-TH0403\",\n  size: \"4 x 3″\",\n  labelsPerRoll: \"1,900\",\n  rollsPerCase: 4,\n  labelsPerCase: \"7,600\"\n}, {\n  productNumber: \"LB-TH0404\",\n  size: \"4 x 4″\",\n  labelsPerRoll: \"6,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"24,000\"\n}, {\n  productNumber: \"LB-TH0405\",\n  size: \"4 x 5″\",\n  labelsPerRoll: \"1,250\",\n  rollsPerCase: 4,\n  labelsPerCase: \"5,000\"\n}, {\n  productNumber: \"LB-TH0406\",\n  size: \"4 x 6″\",\n  labelsPerRoll: \"1,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"4,000\"\n}, {\n  productNumber: \"LB-TH0406F\",\n  size: \"4 x 6 1/2″\",\n  labelsPerRoll: \"900\",\n  rollsPerCase: 4,\n  labelsPerCase: \"3,600\"\n}, {\n  productNumber: \"LB-TH0408\",\n  size: \"4 x 8″\",\n  labelsPerRoll: \"750\",\n  rollsPerCase: 4,\n  labelsPerCase: \"3,000\"\n}, {\n  productNumber: \"LB-TH0410\",\n  size: \"4 x 10″\",\n  labelsPerRoll: \"600\",\n  rollsPerCase: 4,\n  labelsPerCase: \"2,400\"\n}, {\n  productNumber: \"LB-TH0413\",\n  size: \"4 x 13″\",\n  labelsPerRoll: \"475\",\n  rollsPerCase: 4,\n  labelsPerCase: \"1,900\"\n}, {\n  productNumber: \"LB-TH0503\",\n  size: \"5 x 3″\",\n  labelsPerRoll: \"1,900\",\n  rollsPerCase: 4,\n  labelsPerCase: \"7,600\"\n}, {\n  productNumber: \"LB-TH0504\",\n  size: \"5 x 4″\",\n  labelsPerRoll: \"1,500\",\n  rollsPerCase: 4,\n  labelsPerCase: \"6,000\"\n}, {\n  productNumber: \"LB-TH0604\",\n  size: \"6 x 4″\",\n  labelsPerRoll: \"1,500\",\n  rollsPerCase: 4,\n  labelsPerCase: \"6,000\"\n}];\nconst fanfoldedThermalLabels = [{\n  productNumber: \"LB-TH0305-F\",\n  size: \"3 x 5″\",\n  labelsPerRoll: \"1,250\",\n  stacksPerBox: 2,\n  labelsPerBox: \"2,500\"\n}, {\n  productNumber: \"LB-TH03F08-F\",\n  size: \"3 1/2 x 8″\",\n  labelsPerRoll: \"970\",\n  stacksPerBox: 3,\n  labelsPerBox: \"2,910\"\n}, {\n  productNumber: \"LB-TH0401-F\",\n  size: \"4 x 1″\",\n  labelsPerRoll: \"10,500\",\n  stacksPerBox: 2,\n  labelsPerBox: \"21,000\"\n}, {\n  productNumber: \"LB-TH0402-F\",\n  size: \"4 x 2″\",\n  labelsPerRoll: \"6,000\",\n  stacksPerBox: 2,\n  labelsPerBox: \"12,000\"\n}, {\n  productNumber: \"LB-TH0403-F\",\n  size: \"4 x 3″\",\n  labelsPerRoll: \"4,000\",\n  stacksPerBox: 2,\n  labelsPerBox: \"8,000\"\n}, {\n  productNumber: \"LB-TH0404-F\",\n  size: \"4 x 4″\",\n  labelsPerRoll: \"2,000\",\n  stacksPerBox: 3,\n  labelsPerBox: \"6,000\"\n}, {\n  productNumber: \"LB-TH0405-F\",\n  size: \"4 x 5″\",\n  labelsPerRoll: \"2,500\",\n  stacksPerBox: 2,\n  labelsPerBox: \"5,000\"\n}, {\n  productNumber: \"LB-TH0406-F\",\n  size: \"4 x 6″\",\n  labelsPerRoll: \"2,000\",\n  stacksPerBox: 2,\n  labelsPerBox: \"4,000\"\n}, {\n  productNumber: \"LB-TH0406F-F\",\n  size: \"4 x 6 1/2″\",\n  labelsPerRoll: \"2,000\",\n  stacksPerBox: 2,\n  labelsPerBox: \"4,000\"\n}, {\n  productNumber: \"LB-TH0408-F\",\n  size: \"4 x 8″\",\n  labelsPerRoll: \"1,250\",\n  stacksPerBox: 2,\n  labelsPerBox: \"2,500\"\n}];\nconst directThermalThreeInchCoreLbl = [{\n  productNumber: \"LB-DT0201\",\n  size: \"2 x 1″\",\n  labelsPerRoll: \"5,500\",\n  rollsPerCase: 8,\n  labelsPerCase: \"44,000\"\n}, {\n  productNumber: \"LB-DT0302\",\n  size: \"3 x 2″\",\n  labelsPerRoll: \"2,900\",\n  rollsPerCase: 8,\n  labelsPerCase: \"23,200\"\n}, {\n  productNumber: \"LB-DT0305\",\n  size: \"3 x 5″\",\n  labelsPerRoll: \"1,250\",\n  rollsPerCase: 4,\n  labelsPerCase: \"5,000\"\n}, {\n  productNumber: \"LB-DT0402\",\n  size: \"4 x 2″\",\n  labelsPerRoll: \"3,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"12,000\"\n}, {\n  productNumber: \"LB-DT0403\",\n  size: \"4 x 3″\",\n  labelsPerRoll: \"1,900\",\n  rollsPerCase: 4,\n  labelsPerCase: \"7,600\"\n}, {\n  productNumber: \"LB-DT0404\",\n  size: \"4 x 4″\",\n  labelsPerRoll: \"1,500\",\n  rollsPerCase: 4,\n  labelsPerCase: \"6,000\"\n}, {\n  productNumber: \"LB-DT0406\",\n  size: \"4 x 6″\",\n  labelsPerRoll: \"1,000\",\n  rollsPerCase: 4,\n  labelsPerCase: \"4,000\"\n}, {\n  productNumber: \"LB-DT0406F\",\n  size: \"4 x 6 1/2″\",\n  labelsPerRoll: \"900\",\n  rollsPerCase: 4,\n  labelsPerCase: \"3,600\"\n}, {\n  productNumber: \"LB-DT0408\",\n  size: \"4 x 8″\",\n  labelsPerRoll: \"750\",\n  rollsPerCase: 4,\n  labelsPerCase: \"3,000\"\n}];\nconst fanfoldedDirectTransferLbl = [{\n  productNumber: \"LB-DT0402-F\",\n  size: \"4 x 2″\",\n  labelsPerRoll: \"6,000\",\n  rollsPerCase: 2,\n  labelsPerCase: \"12,000\"\n}, {\n  productNumber: \"LB-DT0404-F\",\n  size: \"4 x 4″\",\n  labelsPerRoll: \"3,000\",\n  rollsPerCase: 2,\n  labelsPerCase: \"6,000\"\n}, {\n  productNumber: \"LB-DT0406-F\",\n  size: \"4 x 6″\",\n  labelsPerRoll: \"2,000\",\n  rollsPerCase: 2,\n  labelsPerCase: \"4,000\"\n}, {\n  productNumber: \"LB-DT0406F-F\",\n  size: \"4 x 6 1/2″\",\n  labelsPerRoll: \"2,000\",\n  rollsPerCase: 2,\n  labelsPerCase: \"4,000\"\n}];\nconst directThermalTransLbl = [{\n  productNumber: \"LB-TH04061C\",\n  size: \"4 X 6\",\n  labelsPerRoll: \"250\",\n  rollsPerCase: \"12\",\n  labelsPerCase: \"3, 000\"\n}];\n\nconst ThermalTransfer = () => {\n  return React.createElement(MDBTable, {\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, React.createElement(MDBTableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"Product Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, \"Size\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Labels/Roll\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, \"Rolls/Case\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, \"Labels/Case\"))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, thermalTransferLabels.map(lbls => React.createElement(\"tr\", {\n    key: lbls.productNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, lbls.productNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, lbls.size), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, lbls.labelsPerRoll), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, lbls.rollsPerCase), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, lbls.labelsPerCase)))), React.createElement(MDBTableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, \"Product Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, \"Size\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, \"Labels/Roll\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, \"Stacks/Box\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, \"Labels/Box\"))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, fanfoldedThermalLabels.map(lbls => React.createElement(\"tr\", {\n    key: lbls.productNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, lbls.productNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, lbls.size), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, lbls.labelsPerRoll), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, lbls.stacksPerBox), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, lbls.labelsPerBox)))), React.createElement(MDBTableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"Product Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, \"Size\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"Labels/Roll\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, \"Rolls/Case\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"Labels/Case\"))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, directThermalThreeInchCoreLbl.map(lbls => React.createElement(\"tr\", {\n    key: lbls.productNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, lbls.productNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, lbls.size), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, lbls.labelsPerRoll), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, lbls.rollsPerCase), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, lbls.labelsPerCase)))), React.createElement(MDBTableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, \"Product Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, \"Size\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"Labels/Roll\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }, \"Rolls/Case\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, \"Labels/Case\"))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }, fanfoldedDirectTransferLbl.map(lbls => React.createElement(\"tr\", {\n    key: lbls.productNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }, lbls.productNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }, lbls.size), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, lbls.labelsPerRoll), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, lbls.rollsPerCase), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, lbls.labelsPerCase)))), React.createElement(MDBTableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, \"Product Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  }, \"Size\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }, \"Labels/Roll\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, \"Rolls/Case\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, \"Labels/Case\"))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, directThermalTransLbl.map(lbls => React.createElement(\"tr\", {\n    key: lbls.productNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }, lbls.productNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, lbls.size), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }, lbls.labelsPerRoll), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, lbls.rollsPerCase), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484\n    },\n    __self: this\n  }, lbls.labelsPerCase)))));\n};\n\nexport default ThermalTransfer;","map":{"version":3,"sources":["/Users/jesusgonzalez/Desktop/jpackInternationalReact/src/components/product-data/labels-envelopes/ThermalTransfer.js"],"names":["React","MDBTable","MDBTableBody","MDBTableHead","thermalTransferLabels","productNumber","size","labelsPerRoll","rollsPerCase","labelsPerCase","fanfoldedThermalLabels","stacksPerBox","labelsPerBox","directThermalThreeInchCoreLbl","fanfoldedDirectTransferLbl","directThermalTransLbl","ThermalTransfer","map","lbls"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nconst thermalTransferLabels = [\n\t{\n\t\tproductNumber: \"LB-TH01F01\",\n\t\tsize: \"1 1/2 x 1″\",\n\t\tlabelsPerRoll: \"5,500\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"44,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0201\",\n\t\tsize: \"2 x 1″\",\n\t\tlabelsPerRoll: \"5,500\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"44,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0201-2\",\n\t\tsize: \"2 x 1″ – Two Rolls\",\n\t\tlabelsPerRoll: \"11,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"44,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0201F\",\n\t\tsize: \"2 x 1 1/2″\",\n\t\tlabelsPerRoll: \"3,800\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"30,400\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0201F-2\",\n\t\tsize: \"2 x 1 1/2″ – Two Rolls\",\n\t\tlabelsPerRoll: \"7,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"28,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0202\",\n\t\tsize: \"2 x 2″\",\n\t\tlabelsPerRoll: \"3,000\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"24,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0301\",\n\t\tsize: \"3 x 1″\",\n\t\tlabelsPerRoll: \"5,500\",\n\t\trollsPerCase: 6,\n\t\tlabelsPerCase: \"33,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0302\",\n\t\tsize: \"3 x 2″\",\n\t\tlabelsPerRoll: \"3,000\",\n\t\trollsPerCase: 6,\n\t\tlabelsPerCase: \"18,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0303\",\n\t\tsize: \"3 x 3″\",\n\t\tlabelsPerRoll: \"1,900\",\n\t\trollsPerCase: 6,\n\t\tlabelsPerCase: \"11,400\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0304\",\n\t\tsize: \"3 x 4″\",\n\t\tlabelsPerRoll: \"1,250\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"12,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0305\",\n\t\tsize: \"3 x 5″\",\n\t\tlabelsPerRoll: \"1,250\",\n\t\trollsPerCase: 6,\n\t\tlabelsPerCase: \"7,500\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH03F01\",\n\t\tsize: \"3 1/2 x 1″\",\n\t\tlabelsPerRoll: \"5,500\",\n\t\trollsPerCase: 6,\n\t\tlabelsPerCase: \"33,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH03F08\",\n\t\tsize: \"3 1/2 x 8″\",\n\t\tlabelsPerRoll: \"750\",\n\t\trollsPerCase: 6,\n\t\tlabelsPerCase: \"4,500\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0401\",\n\t\tsize: \"4 x 1″\",\n\t\tlabelsPerRoll: \"5,500\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"22,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0401F\",\n\t\tsize: \"4 x 1 1/2″\",\n\t\tlabelsPerRoll: \"3,600\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"14,400\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0402\",\n\t\tsize: \"4 x 2″\",\n\t\tlabelsPerRoll: \"3,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"12,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0402F\",\n\t\tsize: \"4 x 2 1/2″\",\n\t\tlabelsPerRoll: \"2,500\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"10,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0403\",\n\t\tsize: \"4 x 3″\",\n\t\tlabelsPerRoll: \"1,900\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"7,600\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0404\",\n\t\tsize: \"4 x 4″\",\n\t\tlabelsPerRoll: \"6,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"24,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0405\",\n\t\tsize: \"4 x 5″\",\n\t\tlabelsPerRoll: \"1,250\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"5,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0406\",\n\t\tsize: \"4 x 6″\",\n\t\tlabelsPerRoll: \"1,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"4,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0406F\",\n\t\tsize: \"4 x 6 1/2″\",\n\t\tlabelsPerRoll: \"900\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"3,600\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0408\",\n\t\tsize: \"4 x 8″\",\n\t\tlabelsPerRoll: \"750\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"3,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0410\",\n\t\tsize: \"4 x 10″\",\n\t\tlabelsPerRoll: \"600\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"2,400\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0413\",\n\t\tsize: \"4 x 13″\",\n\t\tlabelsPerRoll: \"475\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"1,900\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0503\",\n\t\tsize: \"5 x 3″\",\n\t\tlabelsPerRoll: \"1,900\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"7,600\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0504\",\n\t\tsize: \"5 x 4″\",\n\t\tlabelsPerRoll: \"1,500\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"6,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0604\",\n\t\tsize: \"6 x 4″\",\n\t\tlabelsPerRoll: \"1,500\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"6,000\"\n\t}\n];\nconst fanfoldedThermalLabels = [\n\t{\n\t\tproductNumber: \"LB-TH0305-F\",\n\t\tsize: \"3 x 5″\",\n\t\tlabelsPerRoll: \"1,250\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"2,500\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH03F08-F\",\n\t\tsize: \"3 1/2 x 8″\",\n\t\tlabelsPerRoll: \"970\",\n\t\tstacksPerBox: 3,\n\t\tlabelsPerBox: \"2,910\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0401-F\",\n\t\tsize: \"4 x 1″\",\n\t\tlabelsPerRoll: \"10,500\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"21,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0402-F\",\n\t\tsize: \"4 x 2″\",\n\t\tlabelsPerRoll: \"6,000\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"12,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0403-F\",\n\t\tsize: \"4 x 3″\",\n\t\tlabelsPerRoll: \"4,000\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"8,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0404-F\",\n\t\tsize: \"4 x 4″\",\n\t\tlabelsPerRoll: \"2,000\",\n\t\tstacksPerBox: 3,\n\t\tlabelsPerBox: \"6,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0405-F\",\n\t\tsize: \"4 x 5″\",\n\t\tlabelsPerRoll: \"2,500\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"5,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0406-F\",\n\t\tsize: \"4 x 6″\",\n\t\tlabelsPerRoll: \"2,000\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"4,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0406F-F\",\n\t\tsize: \"4 x 6 1/2″\",\n\t\tlabelsPerRoll: \"2,000\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"4,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-TH0408-F\",\n\t\tsize: \"4 x 8″\",\n\t\tlabelsPerRoll: \"1,250\",\n\t\tstacksPerBox: 2,\n\t\tlabelsPerBox: \"2,500\"\n\t}\n];\nconst directThermalThreeInchCoreLbl = [\n\t{\n\t\tproductNumber: \"LB-DT0201\",\n\t\tsize: \"2 x 1″\",\n\t\tlabelsPerRoll: \"5,500\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"44,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0302\",\n\t\tsize: \"3 x 2″\",\n\t\tlabelsPerRoll: \"2,900\",\n\t\trollsPerCase: 8,\n\t\tlabelsPerCase: \"23,200\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0305\",\n\t\tsize: \"3 x 5″\",\n\t\tlabelsPerRoll: \"1,250\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"5,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0402\",\n\t\tsize: \"4 x 2″\",\n\t\tlabelsPerRoll: \"3,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"12,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0403\",\n\t\tsize: \"4 x 3″\",\n\t\tlabelsPerRoll: \"1,900\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"7,600\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0404\",\n\t\tsize: \"4 x 4″\",\n\t\tlabelsPerRoll: \"1,500\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"6,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0406\",\n\t\tsize: \"4 x 6″\",\n\t\tlabelsPerRoll: \"1,000\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"4,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0406F\",\n\t\tsize: \"4 x 6 1/2″\",\n\t\tlabelsPerRoll: \"900\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"3,600\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0408\",\n\t\tsize: \"4 x 8″\",\n\t\tlabelsPerRoll: \"750\",\n\t\trollsPerCase: 4,\n\t\tlabelsPerCase: \"3,000\"\n\t}\n];\nconst fanfoldedDirectTransferLbl = [\n\t{\n\t\tproductNumber: \"LB-DT0402-F\",\n\t\tsize: \"4 x 2″\",\n\t\tlabelsPerRoll: \"6,000\",\n\t\trollsPerCase: 2,\n\t\tlabelsPerCase: \"12,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0404-F\",\n\t\tsize: \"4 x 4″\",\n\t\tlabelsPerRoll: \"3,000\",\n\t\trollsPerCase: 2,\n\t\tlabelsPerCase: \"6,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0406-F\",\n\t\tsize: \"4 x 6″\",\n\t\tlabelsPerRoll: \"2,000\",\n\t\trollsPerCase: 2,\n\t\tlabelsPerCase: \"4,000\"\n\t},\n\t{\n\t\tproductNumber: \"LB-DT0406F-F\",\n\t\tsize: \"4 x 6 1/2″\",\n\t\tlabelsPerRoll: \"2,000\",\n\t\trollsPerCase: 2,\n\t\tlabelsPerCase: \"4,000\"\n\t}\n];\nconst directThermalTransLbl = [\n\t{\n\t\tproductNumber: \"LB-TH04061C\",\n\t\tsize: \"4 X 6\",\n\t\tlabelsPerRoll: \"250\",\n\t\trollsPerCase: \"12\",\n\t\tlabelsPerCase: \"3, 000\"\n\t}\n];\n\nconst ThermalTransfer = () => {\n\treturn (\n\t\t<MDBTable striped>\n\n\t\t\t{/*THERMAL TRANSFER LABELS*/}\n\t\t\t<MDBTableHead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Product Number</th>\n\t\t\t\t\t<th>Size</th>\n\t\t\t\t\t<th>Labels/Roll</th>\n\t\t\t\t\t<th>Rolls/Case</th>\n\t\t\t\t\t<th>Labels/Case</th>\n\t\t\t\t</tr>\n\t\t\t</MDBTableHead>\n\t\t\t<MDBTableBody>\n\t\t\t\t{thermalTransferLabels.map(lbls => (\n\t\t\t\t\t<tr key={lbls.productNumber}>\n\t\t\t\t\t\t<td>{lbls.productNumber}</td>\n\t\t\t\t\t\t<td>{lbls.size}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerRoll}</td>\n\t\t\t\t\t\t<td>{lbls.rollsPerCase}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerCase}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</MDBTableBody>\n\t\t\t{/*FAN FOLDED THERMAL LABELS*/}\n\t\t\t<MDBTableHead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Product Number</th>\n\t\t\t\t\t<th>Size</th>\n\t\t\t\t\t<th>Labels/Roll</th>\n\t\t\t\t\t<th>Stacks/Box</th>\n\t\t\t\t\t<th>Labels/Box</th>\n\t\t\t\t</tr>\n\t\t\t</MDBTableHead>\n\t\t\t<MDBTableBody>\n\t\t\t\t{fanfoldedThermalLabels.map(lbls => (\n\t\t\t\t\t<tr key={lbls.productNumber}>\n\t\t\t\t\t\t<td>{lbls.productNumber}</td>\n\t\t\t\t\t\t<td>{lbls.size}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerRoll}</td>\n\t\t\t\t\t\t<td>{lbls.stacksPerBox}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerBox}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</MDBTableBody>\n\t\t\t{/*DIRECT THERMAL THREE INCH LABELS*/}\n\t\t\t<MDBTableHead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Product Number</th>\n\t\t\t\t\t<th>Size</th>\n\t\t\t\t\t<th>Labels/Roll</th>\n\t\t\t\t\t<th>Rolls/Case</th>\n\t\t\t\t\t<th>Labels/Case</th>\n\t\t\t\t</tr>\n\t\t\t</MDBTableHead>\n\t\t\t<MDBTableBody>\n\t\t\t\t{directThermalThreeInchCoreLbl.map(lbls => (\n\t\t\t\t\t<tr key={lbls.productNumber}>\n\t\t\t\t\t\t<td>{lbls.productNumber}</td>\n\t\t\t\t\t\t<td>{lbls.size}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerRoll}</td>\n\t\t\t\t\t\t<td>{lbls.rollsPerCase}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerCase}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</MDBTableBody>\n\t\t\t{/*FAN FOLDED DIRECT TRANSFER LABELS*/}\n\t\t\t<MDBTableHead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Product Number</th>\n\t\t\t\t\t<th>Size</th>\n\t\t\t\t\t<th>Labels/Roll</th>\n\t\t\t\t\t<th>Rolls/Case</th>\n\t\t\t\t\t<th>Labels/Case</th>\n\t\t\t\t</tr>\n\t\t\t</MDBTableHead>\n\t\t\t<MDBTableBody>\n\t\t\t\t{fanfoldedDirectTransferLbl.map(lbls => (\n\t\t\t\t\t<tr key={lbls.productNumber}>\n\t\t\t\t\t\t<td>{lbls.productNumber}</td>\n\t\t\t\t\t\t<td>{lbls.size}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerRoll}</td>\n\t\t\t\t\t\t<td>{lbls.rollsPerCase}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerCase}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</MDBTableBody>\n\t\t\t{/*FAN FOLDED DIRECT TRANSFER LABELS*/}\n\t\t\t<MDBTableHead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Product Number</th>\n\t\t\t\t\t<th>Size</th>\n\t\t\t\t\t<th>Labels/Roll</th>\n\t\t\t\t\t<th>Rolls/Case</th>\n\t\t\t\t\t<th>Labels/Case</th>\n\t\t\t\t</tr>\n\t\t\t</MDBTableHead>\n\t\t\t<MDBTableBody>\n\t\t\t\t{directThermalTransLbl.map(lbls => (\n\t\t\t\t\t<tr key={lbls.productNumber}>\n\t\t\t\t\t\t<td>{lbls.productNumber}</td>\n\t\t\t\t\t\t<td>{lbls.size}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerRoll}</td>\n\t\t\t\t\t\t<td>{lbls.rollsPerCase}</td>\n\t\t\t\t\t\t<td>{lbls.labelsPerCase}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</MDBTableBody>\n\n\t\t</MDBTable>\n\t);\n};\n\nexport default ThermalTransfer;\n"]},"metadata":{},"sourceType":"module"}